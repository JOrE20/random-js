class RandomError extends Error{constructor(e){super(e),this.name="RandomError"}}class Random{constructor(){this.lastSeed=this.between(1,4e9),this.lastResult=null,this.lastHash=null,this.maleNames=["Ethan","Samuel","Jacob","William","Benjamin","Ben","Joshua","Josh","Alexander","Daniel","Jackson","Andrew","Isaac","James","Tyler","Max","Eli","Joseph","Gabriel","Owen","Liam","Cody","Kody","Paul","Zack","Zach","Zac","Zak","Zeke","Zane","Kyle","Saul","Sean","Shaun","Brody","Bryan","Brian","Brandon","Evan","Nick","Xavier","Oliver","Ike","Howie","Howard","Chance","Chandler","Preston","Jason","Mason","Nathan","Luca","Lucas","Luka","Lukas","Ryan","Orion","Damon","Damion","Damien","Ken","Ivan","Michael","Wyatt","Aaron","Colin","Bryce","Brice","Noah","Connor","Conner","Jeremy","Isaiah","Spencer","Dylan","Nash","Freddy","Otto","Todd","Ian","Blake","Julian","Dominic","Grayson","Greyson","Nelson","Jensen","Jenson","Will","Bill","Phil","Dave","Cyrus","Travis","Henry","Reece","Reese","Branson","Mark","Marc","Scott","Aiden","Vincent","Vince","Jimmy","Jaxon","Kobe","Cobe","Koby","Coby","Solomon","Oscar","Ollie","Ewan","Cole","Lucian","Billy","Gavin","Malikai","Makai","Javion","Patrick","Beckett","Easton","Jake","Kaleb","Niko","Nico","Justin","Mateo","Muhammad","Emmett","AJ","BJ","TJ","DJ","Trent","Trenton","Theo","Duncan","Ezekiel","Harold","Geoff","Jeff","Steve","Joe","Larry","Carl","Karl","Preston","Ben","Lenny","Lennard","Bruno","Leonardo","Mac","Christopher","Kristopher","Carson","Hunter","Hudson","Roman","Declan","Miles","Jude","Seth","Antonio","Montgomery","Eugene","Rhett","Colt","Shane","Caden","Kaden","Cayden","Kayden","Nate","Landon","Austin","Dallas","Parker","Weston","Milo","Dawson","Juda","Judah","Paxton","Zander","Simon","Kyler","Garrett","Winston","Jared","Jonas","Porter","Carter","Russell","Benson","Marcel","Quentin","Quenton","Gregory","Greg","Orlando","Thaddeus","Jeffery","Jeffrey","Everest","Israel","David","Leo","Lewis","Louis","Lance","George","Grant","Xander","Tate","Titus","Trevor","Trevon","Kurtis","Curtis","Santiago","Shawn","Romeo","Keith","Kipp","Lane","Felix","Frank","Flynn","Melvin","Magnus","Diego","Douglas","Dale","Yavin","Brady","Julius","Jasper","Jay","Hugo","Hank","Stefan","Silas","Quimby","Leland","Warford","Ugo","Esteban","Dean","Desmond","Dex","Dwayne","Don","Bob","Olaf","Lambert","Macon","Ralph","Gage","Ajax","Shane","Vance","Jebediah","Terrence","Manuel","Zachariah","Hagan","Eldon","Yvon","Price","Galen","Elias","Vinny","Uriel","Townsend","Dalton","Beckham","Kal-el","Jaegar","Garvey","Sonny","Fairfax","Wally","Fergus","Jerome","Lambert","Dane","Jaron","Galvin","Calvin","Haines","Van","Kale","Kane","Iggy","Tam","Randall","Carlisle","Wilhelm","Wilbur","Aldon","Alden","Edison","Dev","Andru","Cliff","Clifford","Nic","Nik","Ralf","King","Craig","Eriq","Beau","Chaz","Dez","Ozzy","Ozzie","Karter","Lincoln","Atticus","Soren","Horace","Yuda","Fletcher","Hardy","Kane","Ogden","Xylon","Abbott"],this.femaleNames=["Emma","Olivia","Ava","Isabella","Sophia","Mia","Charlotte","Amelia","Evelyn","Abigail","Harper","Emily","Elizabeth","Avery","Sofia","Ella","Madison","Scarlett","Victoria","Aria","Grace","Chloe","Camila","Penelope","Riley","Layla","Lillian","Nora","Zoey","Mila","Aubrey","Hannah","Lily","Addison","Eleanor","Natalie","Luna","Savannah","Brooklyn","Leah","Zoe","Stella","Hazel","Ellie","Paisley","Audrey","Skylar","Violet","Claire","Bella","Aurora","Lucy","Anna","Samantha","Caroline","Genesis","Aaliyah","Kennedy","Kinsley","Allison","Maya","Sarah","Madelyn","Adeline","Alexa","Ariana","Elena","Gabriella","Naomi","Alice","Sadie","Hailey","Eva","Emilia","Autumn","Quinn","Nevaeh","Piper","Ruby","Serenity","Willow","Everly","Cora","Kaylee","Lydia","Aubree","Arianna","Eliana","Peyton","Melanie","Gianna","Isabelle","Julia","Valentina","Nova","Clara","Vivian","Reagan","Mackenzie","Madeline","Brielle"],this.lastNames=["Smith","Johnson","Williams","Brown","Jones","Miller","Davis","Garcia","Rodriguez","Wilson","Martinez","Anderson","Taylor","Thomas","Hernandez","Moore","Martin","Jackson","Thompson","White","Lopez","Lee","Gonzalez","Harris","Clark","Lewis","Robinson","Walker","Perez","Hall","Young","Allen","Sanchez","Wright","King","Scott","Green","Baker","Adams","Nelson","Hill","Ramirez","Campbell","Mitchell","Roberts","Carter","Phillips","Evans","Turner","Torres","Parker","Collins","Edwards","Stewart","Flores","Morris","Nguyen","Murphy","Rivera","Cook","Rogers","Morgan","Peterson","Cooper","Reed","Bailey","Bell","Gomez","Kelly","Howard","Ward","Cox","Diaz","Richardson","Wood","Watson","Brooks","Bennett","Gray","James","Reyes","Cruz","Hughes","Price","Myers","Long","Foster","Sanders","Ross","Morales","Powell","Sullivan","Russell","Ortiz","Jenkins","Gutierrez","Perry","Butler","Barnes","Fisher","Henderson","Coleman","Simmons","Patterson","Jordan","Reynolds","Hamilton","Graham","Kim","Gonzales","Alexander","Ramos","Wallace","Griffin","West","Cole","Hayes","Chavez","Gibson","Bryant","Ellis","Stevens","Murray","Ford","Marshall","Owens","Mcdonald","Harrison","Ruiz","Kennedy","Wells","Alvarez","Woods","Mendoza","Castillo","Olson","Webb","Washington","Tucker","Freeman","Burns","Henry","Vasquez","Snyder","Simpson","Crawford","Jimenez","Porter","Mason","Shaw","Gordon","Wagner","Hunter","Romero","Hicks","Dixon","Hunt","Palmer","Robertson","Black","Holmes","Stone","Meyer","Boyd","Mills","Warren","Fox","Rose","Rice","Moreno","Schmidt","Patel","Ferguson","Nichols","Herrera","Medina","Ryan","Fernandez","Weaver","Daniels","Stephens","Gardner","Payne","Kelley","Dunn","Pierce","Arnold","Tran","Spencer","Peters","Hawkins","Grant","Hansen","Castro","Hoffman","Hart","Elliott","Cunningham","Knight","Bradley"],this.countries=["Afghanistan","Albania","Algeria","Andorra","Angola","Antigua and Barbuda","Argentina","Armenia","Australia","Austria","Azerbaijan","The Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bhutan","Bolivia","Bosnia and Herzegovina","Botswana","Brazil","Brunei","Bulgaria","Burkina Faso","Burundi","Cabo Verde","Cambodia","Cameroon","Canada","Central African Republic","Chad","Chile","China","Colombia","Comoros","Congo, Democratic Republic of the","Congo, Republic of the","Costa Rica","Côte d'Ivoire","Croatia","Cuba","Cyprus","Czechia","Denmark","Djibouti","Dominica","Dominican Republic","East Timor","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","The Gambia","Georgia","Germany","Ghana","Greece","Grenada","Guatemala","Guinea","Guinea-Bissau","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jordan","Kansas","Kazakhstan","Kenya","Kiribati","Korea, North","Korea, South","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Mauritania","Maurice","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","New Zealand","Nicaragua","Niger","Nigeria","North Macedonia","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal","Qatar","Romania","Russia","Rwanda","Saint Kitts and Nevis","Saint Lucia","Saint Vincent and the Grenadines","Samoa","San Marino","São Tomé and Príncipe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Togo","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States","Uruguay","Uzbekistan","Vanuatu","Vatican City","Venezuela","Vietnam","Yemen","Zambia","Zimbabwe"],this.usStates=["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","NewHampshire","NewJersey","NewMexico","NewYork","NorthCarolina","NorthDakota","Ohio","Oklahoma","Oregon","Pennsylvania","RhodeIsland","SouthCarolina","SouthDakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","WestVirginia","Wisconsin","Wyoming"],this.misc={demoArray:["Apple","Banana","Cherry"],coinFlipper:()=>this.pick(["Heads!","Tails!"]),diceRoller:(e=6)=>this.between(1,e),seededDiceRoller:(e=6)=>this.seeded(1,e),randomColor:()=>{let e="#";for(let t=0;t<6;t++)e+=this.pick("0123456789ABCDEF");return e},randomRgbColor:()=>`rgb(${this.between(0,255)}, ${this.between(0,255)}, ${this.between(0,255)})`,randomHslColor:()=>`hsl(${this.between(0,360)}, ${this.between(0,100)}%, ${this.between(0,100)}%)`,shuffleArray:e=>{const t=[...e];for(let e=t.length-1;e>0;e--){const a=this.between(0,e);[t[e],t[a]]=[t[a],t[e]]}return t},seededShuffleArray:e=>{const t=[...e];for(let e=t.length-1;e>0;e--){const a=this.seeded(0,e);[t[e],t[a]]=[t[a],t[e]]}return t},randomString:(e=10,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789")=>{let a="";for(let n=0;n<e;n++)a+=this.pick(t);return a},charset:{ALPHABET:"ABCDEFGHIJKLMNOPQRSTUVWXYZ",alphabet:"abcdefghijklmnopqrstuvwxyz",NUMBERS:"0123456789",SYMBOLS:"!@#$%^&*()_+-=[]{}|;:,.<>?",ALPHANUMERIC:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",ALL:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"}},this.about={version:"v2.4",build:81,product:"Random.js",creator:"JOrE",date:"9/10/2025",updated:"9/16/2025",features:["Seeded random numbers","Weighted random selection","Array utilities","Probability functions","Float number generation","Gaussian distribution","UUID generation","Color utilities"]},this.seededFunctions={pick:this.seededPick.bind(this),flipCoin:this.seededFlipCoin.bind(this),oneChanceOutOf:this.seededOneChanceOutOf.bind(this),weightedPick:this.seededWeightedPick.bind(this),pickExcept:this.seededPickExcept.bind(this),randomFloat:this.seededFloat.bind(this),gaussian:this.seededGaussian.bind(this),uuid:this.seededUuid.bind(this),date:this.seededDate.bind(this),pickMultiple:this.seededPickMultiple.bind(this)}}hash(e){return 2654435761*e>>>0}fastestRng(e,t){return window?this.between(e,t):this.seeded(e,t)}float(e,t,a=0){let n=e+Math.random()*(t-e);if(a>0){Math.floor((t-e)/a);n=e+Math.floor(n/a)*a}return this.lastResult=n,n}seededFloat(e,t,a=0){this.lastHash=this.hash(this.currentSeed());let n=e+this.lastHash/4294967295*(t-e);if(a>0){Math.floor((t-e)/a);n=e+Math.floor(n/a)*a}return this.lastResult=n,this.setSeed(this.lastHash),n}gaussian(e=0,t=1){let a=0,n=0;for(;0===a;)a=Math.random();for(;0===n;)n=Math.random();return e+t*(Math.sqrt(-2*Math.log(a))*Math.cos(2*Math.PI*n))}seededGaussian(e=0,t=1){const a=this.seededFloat(1e-6,1),n=this.seededFloat(1e-6,1);return e+t*(Math.sqrt(-2*Math.log(a))*Math.cos(2*Math.PI*n))}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}seededUuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{const t=this.seeded(0,15);return("x"===e?t:3&t|8).toString(16)}))}randomize(){this.lastSeed=this.between(0,4294967e3)}between(e,t){return e+Math.floor(Math.random()*(t-e+1))}setSeed(e){if("number"!=typeof e)throw new RandomError("Seed must be a number");this.lastSeed=e}freshStart(){this.lastSeed=1,this.lastResult=null,this.lastHash=null}seeded(e,t){return this.lastSeed=2654435761*this.lastSeed+1|0,e+(2147483647&this.lastSeed)%(t-e+1)}withSeed(e,t,a){return e+(2147483647&(2654435761*a+1|0))%(t-e+1)}seededFill(e,t,a){let n=[];for(let i=0;i<a;i++)this.lastSeed=2654435761*this.lastSeed+1|0,n.push(e+(2147483647&(2654435761*this.lastSeed+1|0))%(t-e+1));return n}fill(e,t,a){let n=[];for(let i=0;i<a;i++)n.push(this.between(e,t));return n}withSeedFill(e,t,a,n){let i=[];this.lastSeed=n;for(let n=0;n<a;n++)this.lastSeed=2654435761*this.lastSeed+1|0,i.push(e+(2147483647&(2654435761*this.lastSeed+1|0))%(t-e+1));return i}weightedPick(e,t=!1,a=void 0,n=void 0,i=!1){let s=0;if(!Array.isArray(e))throw new RandomError("items parameter must be an array.");if(0===e.length)throw new RandomError("items array is empty.");const r=[];let o=0,l=!1,d=!1;for(let t=0;t<e.length;t++){const i=e[t];let s,h;if(void 0===i.value){if(void 0===n)throw new RandomError("There is no value property for some item(s).");s=n,d=!0}else s=i.value;if(void 0===i.weight){if(void 0===a)throw new RandomError("There is no weight property for some item(s).");h=a,l=!0}else h=i.weight;if("number"!=typeof h||isNaN(h))throw new RandomError(`Weight must be a number for item at index ${t}.`);r.push({value:s,weight:h}),o+=h}if(0===o){if(!t)throw new RandomError("All weights for weightedPick is 0.");o=r.length,r.forEach((e=>e.weight=1))}s=i?this.seeded(0,1e6)/1e6*o:Math.random()*o;let h=0;for(const e of r)if(h+=e.weight,s<=h)return e.value;return r[r.length-1].value}seededWeightedPick(e,t=!1,a=void 0,n=void 0){return this.weightedPick(e,t,a,n,!0)}arrayToSimplePickList(e,t=void 0){if(!Array.isArray(e))throw new RandomError("array parameter must be an array.");const a=null!=t&&"string"!=typeof t?t:1;return e.map((e=>({value:e,weight:a})))}date(e,t){const a=e?new Date(e):new Date(2e3,0,1),n=t?new Date(t):new Date;return new Date(a.getTime()+Math.random()*(n.getTime()-a.getTime()))}seededDate(e,t){const a=e?new Date(e):new Date(2e3,0,1),n=t?new Date(t):new Date,i=this.seeded(0,1e6)/1e6;return new Date(a.getTime()+i*(n.getTime()-a.getTime()))}pickExcept(e,t){const a=Array.isArray(t)?t:[t],n=e.filter((e=>!a.includes(e)));if(0===n.length)throw new RandomError("No items available after exclusion");return this.pick(n)??n[n.length-1]}seededPickExcept(e,t){const a=Array.isArray(t)?t:[t],n=e.filter((e=>!a.includes(e)));if(0===n.length)throw new RandomError("No items available after exclusion");return this.seededPick(n)??n[n.length-1]}pickMultiple(e,t=1,a=!0){if(a&&t>e.length)throw new RandomError(`Cannot pick ${t} unique items from array of length ${e.length}`);if(a){return this.misc.shuffleArray(e).slice(0,t)}{const a=[];for(let n=0;n<t;n++)a.push(this.pick(e));return a}}seededPickMultiple(e,t=1,a=!0){if(a&&t>e.length)throw new RandomError(`Cannot pick ${t} unique items from array of length ${e.length}`);if(a){return this.misc.seededShuffleArray(e).slice(0,t)}{const a=[];for(let n=0;n<t;n++)a.push(this.seededPick(e));return a}}exportState(){return{seed:this.lastSeed,lastResult:this.lastResult,lastHash:this.lastHash}}importState(e){return!(!e||!e.seed)&&(this.lastSeed=e.seed,this.lastResult=e.lastResult,this.lastHash=e.lastHash,!0)}resetToSeed(e){this.freshStart(),this.setSeed(e)}flipCoin(){return Math.random()>.5}percentChance(e){return Math.random()<e/100}seededPercentChance(e){return this.seeded(0,100)<e}seededFlipCoin(){return 1==this.seeded(1,2)}currentSeed(){return this.lastSeed}clamp(e,t,a){return Math.max(Math.min(e,a),t)}oneChanceOutOf(e){return 1==this.between(1,e)}seededOneChanceOutOf(e){return 1==this.seeded(1,e)}pick(e){return e[this.between(0,e.length-1)]}seededPick(e){return e[this.seeded(0,e.length-1)]}repeat(e,t){for(let a=0;a<t;a++)e()}character(e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"){return this.pick(e.split(""))}number(){return this.pick(["0","1","2","3","4","5","6","7","8","9"])}letter(){return this.pick("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""))}upcase(){return this.pick("ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""))}lowcase(){return this.pick("abcdefghijklmnopqrstuvwxyz".split(""))}symbol(){return this.pick("!@#$%^&*()_+-=[]{}|;:,.<>?".split(""))}seededCharacter(e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"){return this.seededPick(e.split(""))}seededNumber(){return this.seededPick(["0","1","2","3","4","5","6","7","8","9"])}seededLetter(){return this.seededPick("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""))}seededUpcase(){return this.seededPick("ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""))}seededLowcase(){return this.seededPick("abcdefghijklmnopqrstuvwxyz".split(""))}seededSymbol(){return this.seededPick("!@#$%^&*()_+-=[]{}|;:,.<>?".split(""))}falsy(){return this.pick([null,void 0,NaN,0,!1,""])}nullish(){return this.pick([null,void 0])}seededFalsy(){return this.seededPick([null,void 0,NaN,0,!1,""])}seededNullish(){return this.seededPick([null,void 0])}string(e,t){const a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?".split(""),n=e?Array.isArray(e)?e:e.split(""):a,i=void 0!==t?t:this.between(5,20);let s="";for(let e=0;e<i;e++)s+=this.pick(n);return s}seededString(e,t){const a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+-=[]{}|;:,.<>?".split(""),n=e?e.split(""):a,i=void 0!==t?t:this.seeded(5,20);let s="";for(let e=0;e<i;e++)s+=this.seededPick(n);return s}fakeWord(e){const t="aeiou".split(""),a="bcdfghjklmnpqrstvwxyz".split(""),n=void 0!==e?e:this.between(4,7);let i="";for(let e=0;e<n;e++)i+=e%2==0?this.pick(a):this.pick(t);return i}seededFakeWord(e){const t="aeiou".split(""),a="bcdfghjklmnpqrstvwxyz".split(""),n=void 0!==e?e:this.seeded(4,7);let i="";for(let e=0;e<n;e++)i+=e%2==0?this.seededPick(a):this.seededPick(t);return i}prime(e,t,a=!1){if(e>t)throw new RandomError(`Minimum value (${e}) is more than maximum value (${t}).`);e<2&&(e=2);const n=e=>{if(e<2)return!1;if(2===e)return!0;if(e%2==0)return!1;for(let t=3;t<=Math.sqrt(e);t+=2)if(e%t==0)return!1;return!0},i=[];for(let a=e;a<=t;a++)n(a)&&i.push(a);if(0===i.length)throw new RandomError(`No prime numbers found between ${e} and ${t}`);return a?this.seededPick(i):this.pick(i)}seededPrime(e,t){return this.prime(e,t,!0)}ip(){return`${this.between(1,255)}.${this.between(0,255)}.${this.between(0,255)}.${this.between(1,255)}`}ipv6(){const e=[];for(let t=0;t<8;t++)e.push(this.between(0,65535).toString(16));return e.join(":")}seededIP(){return`${this.seeded(1,255)}.${this.seeded(0,255)}.${this.seeded(0,255)}.${this.seeded(1,255)}`}seededIPv6(){const e=[];for(let t=0;t<8;t++)e.push(this.seeded(0,65535).toString(16));return e.join(":")}name(){return`${this.flipCoin()?this.pick(this.maleNames):this.pick(this.femaleNames)} ${this.pick(this.lastNames)}`}fakeName(){return`${this.titlecase(this.fakeWord())} ${this.titlecase(this.fakeWord())}`}maleName(){return`${this.pick(this.maleNames)} ${this.pick(this.lastNames)}`}femaleName(){return`${this.pick(this.femaleNames)} ${this.pick(this.lastNames)}`}country(){return this.pick(this.countries)}usState(){return this.pick(this.usStates)}phoneNumber(){return`(${this.between(200,999)}) ${this.between(200,999)}-${this.between(1e3,9999)}`}postal(){return`${this.between(1e4,99999)}`}email(e="example.com"){return`${this.string("abcdefghijklmnopqrstuvwxyz0123456789",this.between(5,10))}@${e}`}bool(){return this.flipCoin()}hexColor(){return`#${this.string("0123456789ABCDEF",6)}`}rgbColor(){return`rgb(${this.between(0,255)}, ${this.between(0,255)}, ${this.between(0,255)})`}coordinate(){return`${this.float(-90,90,1e-6).toFixed(6)}, ${this.float(-180,180,1e-6).toFixed(6)}`}url(){return`https://${this.string("abcdefghijklmnopqrstuvwxyz",this.between(5,10))}.com`}username(){return this.string("abcdefghijklmnopqrstuvwxyz0123456789_",this.between(3,12))}securePassword(){return this.string("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*",this.between(8,16))}macAddress(){const e=[];for(let t=0;t<6;t++)e.push(this.string("0123456789ABCDEF",2));return e.join(":")}creditCard(){return(this.pick(["4","5","3"])+this.string("0123456789",15)).replace(/(.{4})/g,"$1 ").trim()}expiryDate(){return`${this.between(1,12).toString().padStart(2,"0")}/${this.between(2025,2035)}`}cvv(){return this.string("0123456789",3)}currency(e=1,t=1e3){return`$${this.float(e,t,.01).toFixed(2)}`}timestamp(){return new Date(Date.now()-this.between(0,31536e6)).toISOString()}seededName(){return`${this.seededFlipCoin()?this.seededPick(this.maleNames):this.seededPick(this.femaleNames)} ${this.seededPick(this.lastNames)}`}seededMaleName(){return`${this.seededPick(this.maleNames)} ${this.seededPick(this.lastNames)}`}seededFemaleName(){return`${this.seededPick(this.femaleNames)} ${this.seededPick(this.lastNames)}`}seededCountry(){return this.seededPick(this.countries)}seededUsState(){return this.seededPick(this.usStates)}seededPhoneNumber(){return`(${this.seeded(200,999)}) ${this.seeded(200,999)}-${this.seeded(1e3,9999)}`}seededPostal(){return`${this.seeded(1e4,99999)}`}seededEmail(e="example.com"){return`${this.seededString("abcdefghijklmnopqrstuvwxyz0123456789",this.seeded(5,10))}@${e}`}seededCoordinate(){return`${this.seededFloat(-90,90,1e-6).toFixed(6)}, ${this.seededFloat(-180,180,1e-6).toFixed(6)}`}seededUrl(){return`https://${this.seededString("abcdefghijklmnopqrstuvwxyz",this.seeded(5,10))}.com`}seededUsername(){return this.seededString("abcdefghijklmnopqrstuvwxyz0123456789_",this.seeded(3,12))}seededPassword(){return this.seededString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*",this.seeded(8,16))}seededMacAddress(){const e=[];for(let t=0;t<6;t++)e.push(this.seededString("0123456789ABCDEF",2));return e.join(":")}seededCreditCard(){return(this.seededPick(["4","5","3"])+this.seededString("0123456789",15)).replace(/(.{4})/g,"$1 ").trim()}seededExpiryDate(){return`${this.seeded(1,12).toString().padStart(2,"0")}/${this.seeded(2025,2035)}`}seededCvv(){return this.seededString("0123456789",3)}seededCurrency(e=1,t=1e3){return`$${this.seededFloat(e,t,.01).toFixed(2)}`}seededTimestamp(){return new Date(Date.now()-this.seeded(0,31536e6)).toISOString()}sentence(e,t){const a=void 0!==e?e:this.between(5,10),n=t;let i="";for(let e=0;e<a;e++)i+=this.fakeWord(n),e<a-1&&(i+=" ");return i.charAt(0).toUpperCase()+i.slice(1)+"."}seededSentence(e,t){const a=void 0!==e?e:this.seeded(20,30),n=t;let i="";for(let e=0;e<a;e++)i+=this.seededFakeWord(n),e<a-1&&(i+=" ");return i.charAt(0).toUpperCase()+i.slice(1)+"."}paragraph(e,t,a,n){const i=void 0!==n?n:this.between(3,5),s=void 0!==a?a:this.between(3,5),r=e,o=t;let l="";for(let e=0;e<s;e++)l+=this.sentence(r,o),e<s-1&&(l+=" "),e%i==0&&(l+="\n");return l}capitalize(e){if("string"!=typeof e||0===e.length)return e;let t="",a=!0;for(let n=0;n<e.length;n++){const i=e.charAt(n);a&&/[a-zA-Z]/.test(i)?(t+=i.toUpperCase(),a=!1):t+=i,/[.!?]/.test(i)&&(a=!0)}return t}titlecase(e){return"string"!=typeof e||0===e.length?e:e.split(" ").map((e=>0===e.length?e:e.charAt(0).toUpperCase()+e.slice(1).toLowerCase())).join(" ")}upcase(e){return"string"!=typeof e?e:e.toUpperCase()}lowcase(e){return"string"!=typeof e?e:e.toLowerCase()}mock(e){if("string"!=typeof e)return e;let t="";for(let a=0;a<e.length;a++)t+=a%2==0?e.charAt(a).toLowerCase():e.charAt(a).toUpperCase();return t}seededParagraph(e,t,a){const n=void 0!==a?a:this.seeded(3,5),i=void 0!==e?e:this.seeded(20,30),s=void 0!==t?t:this.seeded(4,7);let r="";for(let e=0;e<n;e++)r+=this.seededSentence(i,s),e<n-1&&(r+=" ");return r}loremIpsum(e,t,a){return"Lorem Ipsum "+this.paragraph(t,e,a)}seededLoremIpsum(e,t,a){return"Lorem Ipsum "+this.seededParagraph(t,e,a)}demo(){console.log(`%cRandom.js Demo ${this.about.version}`,"font-size: 16px; font-weight: bold;"),console.log(`Random.between(10,20) = ${this.between(10,20)}`),console.log(`Random.float(1,100) = ${this.float(1,100)}`),console.log(`Random.float(1,100,0.1) = ${this.float(1,100,.1)}`),console.log(`Random.hash(1) = ${this.hash(1)}`),console.log(`Random.flipCoin() = ${this.flipCoin()}`),console.log(`Random.date() = ${this.date()}`),console.log(`Random.oneChanceOutOf(5) = ${this.oneChanceOutOf(5)}`),console.log(`Random.pick(["Apple", "Banana", "Cherry"]) = ${this.pick(["Apple","Banana","Cherry"])}`),console.log(`Random.clamp(123, 10, 100) = ${this.clamp(123,10,100)}`),console.log(`Random.percentChance(30) = ${this.percentChance(30)}`),console.log("\n%cGaussian Distribution","font-size: 14px; font-weight: bold;"),console.log(`Random.gaussian(0, 1) = ${this.gaussian(0,1)}`),console.log(`Random.gaussian(50, 10) = ${this.gaussian(50,10)}`),console.log("\n%cUUID Generation","font-size: 14px; font-weight: bold;"),console.log(`Random.uuid() = ${this.uuid()}`);let e=[];for(let t=1;t<10;t++)e.push(this.seeded(1,1e3));console.log(`\n10 values of Random.seeded(1, 1000): ${e}`);const t=[{value:"Common",weight:2},{value:"Uncommon",weight:1},{value:"Rare",weight:.5}];console.log(`\nRandom.weightedPick result: ${this.weightedPick(t)}`),console.log(`Random.seededWeightedPick result: ${this.seededWeightedPick(t)}`),console.log("\n%cMisc Utilities","font-size: 14px; font-weight: bold;"),console.log(`Random.misc.randomColor() = ${this.misc.randomColor()}`),console.log(`Random.misc.randomRgbColor() = ${this.misc.randomRgbColor()}`),console.log(`Random.misc.randomHslColor() = ${this.misc.randomHslColor()}`),console.log(`Random.misc.shuffleArray([1,2,3,4,5]) = ${this.misc.shuffleArray([1,2,3,4,5])}`),console.log(`Current seed: ${this.currentSeed()}`)}benchmark(){let e=0,t=1,a=0,n=0,i=0,s=0;console.log(`%cRandom.js ${this.about.version} Benchmark`,"font-size: 16px; font-weight: bold;"),console.log("Testing 1 billion seeded random numbers..."),n=Date.now();for(let a=1;a<1e9;a++)t=2654435761*t+1|0,e=1+(2147483647&t)%100;a=Date.now(),s=a-n,console.log(`Test done, time taken: ${a-n}ms`),console.log("Now testing 1 billion Math.random() calls..."),n=Date.now();for(let e=1;e<1e9;e++)t=Math.random();a=Date.now(),i=a-n,console.log(`Test done, time taken: ${i}ms`),console.log("Now testing 1 billion random non-seeded numbers between 1 and 100:"),n=Date.now();for(let e=1;e<1e9;e++)t=this.between(1,100);a=Date.now(),a-n>i?console.log(`Test done, time taken: ${a-n}ms, ${Math.floor((a-n)/i*100)/100}x slower than native Math.random().`):console.log(`Test done, time taken: ${a-n}ms, ${Math.floor(100*(i/a-n))/100}x faster (???) than native Math.random().`),i>s&&console.log(`The seeded random number generation is mythically ${Math.floor(i/s*100)/100}x faster than native Math.random(), so you should use the seeded random generation instead of native Math.random(). The initial seed is fully random so just use Random.seeded(min, max).`)}}"undefined"!=typeof module&&module.exports&&(module.exports=new Random),"undefined"!=typeof exports&&(exports.default=new Random),"undefined"!=typeof window&&(window.Random=new Random,window.randomJSIncluded=!0);
